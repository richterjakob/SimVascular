name: macos
on: [push, pull_request]
jobs:
  # build-macos-monterey:
  #   runs-on: macos-12
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build
  #       shell: bash
  #       run: |
  #         export TERM=xterm-256color
  #         export CPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include
  #         brew install qt5
  #         mkdir Build
  #         cd Build
  #         cmake ..
  #         make
  build-macos-big-sur:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Build
        shell: bash
        run: |
          export TERM=xterm-256color
          /bin/launchctl setenv LIBRARY_PATH /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
          /bin/launchctl setenv CPATH /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
          brew update
          brew outdated && brew upgrade
          brew install qt5
          mkdir Build
          cd Build
          cmake ..
          make
  # build-macos-catalina:
  #   runs-on: macos-10.15
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build
  #       shell: bash
  #       run: |
  #         export TERM=xterm-256color
  #         export CPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include
  #         brew install qt5
  #         mkdir Build
  #         cd Build
  #         cmake ..
  #         make
  # build-ubuntu-20:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install dependencies
  #       shell: bash
  #       run: sudo apt-get install libglu1-mesa-dev libxt-dev libxi-dev libglew-dev libxmu-dev gcc-8 g++-8 qt5-default
  #     - name: Build
  #       shell: bash
  #       run: |
  #         export CC=/usr/bin/gcc-8
  #         export CXX=/usr/bin/g++-8
  #         mkdir Build
  #         cd Build
  #         cmake ..
  #         make
  # build-ubuntu-18:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install dependencies
  #       shell: bash
  #       run: sudo apt-get install libglu1-mesa-dev libxt-dev libxi-dev libglew-dev libxmu-dev qt5-default
  #     - name: Build
  #       shell: bash
  #       run: |
  #         mkdir Build
  #         cd Build
  #         cmake ..
  #         make
  build-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      - name: Build
        shell: bash
        run: |
          mkdir Build
          cd Build
          choco install cmake
          choco install visualstudio2017community
          export VS150COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/Tools"
          cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CONFIGURATION_TYPES=Release -DCMAKE_VS_PLATFORM_TOOLSET=v141 -DSV_USE_SV4_GUI:BOOL=OFF -DCMAKE_CXX_FLAGS="/MD /MP /Od /EHsc" -DCMAKE_C_FLAGS="/MD /MP /Od" -DCMAKE_CXX_FLAGS_RELEASE="/MD /MP /Od /EHsc" -DCMAKE_C_FLAGS_RELEASE="/MD /MP /Od" -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=OFF -DSV_USE_FREETYPE=ON -DSV_USE_GDCM=ON -DSV_USE_ITK=ON -DSV_USE_MPICH2=OFF -DSV_USE_OpenCASCADE=ON -DSV_USE_PYTHON=ON -DSV_USE_MMG=ON -DSV_USE_MITK=ON -DSV_USE_Qt5=ON -DSV_USE_QT=ON -DSV_DOWNLOAD_EXTERNALS=ON -DSV_EXTERNALS_USE_TOPLEVEL_BIN_DIR=ON -DSV_EXTERNALS_VERSION_NUMBER:STRING=2019.06 -DSV_EXTERNALS_USE_PREBUILT_QT:BOOL=false ..
          cmake --build .
